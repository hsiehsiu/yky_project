cmake_minimum_required(VERSION 3.5)
project(arm_movement)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

add_definitions(-DROS2_BUILD)

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tm_msgs REQUIRED)
find_package(nlohmann_json REQUIRED)
find_package(moveit_ros_planning_interface REQUIRED)
find_package(geometry_msgs REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

include_directories(include
  ${CMAKE_CURRENT_SOURCE_DIR}
)

add_executable(send_movement 
  src/send_movement.cpp
)
target_link_libraries(send_movement nlohmann_json::nlohmann_json)

ament_target_dependencies(send_movement
  rclcpp
  std_msgs
  sensor_msgs
  tm_msgs
  moveit_ros_planning_interface
  geometry_msgs
)
target_link_libraries(send_movement nlohmann_json::nlohmann_json)

install(TARGETS
  send_movement
  DESTINATION lib/${PROJECT_NAME}
)

add_executable(pose_subscriber
  src/pose_subscriber.cpp
)
target_link_libraries(pose_subscriber nlohmann_json::nlohmann_json)

ament_target_dependencies(pose_subscriber
  rclcpp
  std_msgs
  sensor_msgs
  tm_msgs
  moveit_ros_planning_interface
  geometry_msgs
)
target_link_libraries(pose_subscriber nlohmann_json::nlohmann_json)

install(TARGETS
  pose_subscriber
  DESTINATION lib/${PROJECT_NAME}
)

ament_package()
